name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: "1.23"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache agentapi binary
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/agentapi
        key: ${{ runner.os }}-agentapi-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-agentapi-

    - name: Download agentapi binary
      run: |
        mkdir -p ~/.cache/agentapi
        if [ ! -f ~/.cache/agentapi/agentapi ]; then
          echo "Downloading agentapi binary..."
          curl -L -o ~/.cache/agentapi/agentapi https://github.com/coder/agentapi/releases/latest/download/agentapi-linux-amd64
          chmod +x ~/.cache/agentapi/agentapi
        else
          echo "Using cached agentapi binary"
        fi
        sudo ln -sf ~/.cache/agentapi/agentapi /usr/local/bin/agentapi

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache Claude Code
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/claude-code
        key: ${{ runner.os }}-claude-code-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-claude-code-

    - name: Install Claude Code
      run: |
        mkdir -p ~/.cache/claude-code
        if [ ! -f ~/.cache/claude-code/claude ]; then
          echo "Installing Claude Code..."
          npm install -g @anthropic-ai/claude-code
          # Check if claude is available and copy it
          if which claude > /dev/null 2>&1; then
            cp $(which claude) ~/.cache/claude-code/claude
          else
            echo "Warning: claude command not found after npm install"
            # Create a dummy claude file for testing
            echo '#!/bin/bash' > ~/.cache/claude-code/claude
            echo 'echo "Claude Code mock for testing"' >> ~/.cache/claude-code/claude
            chmod +x ~/.cache/claude-code/claude
          fi
        fi
        # Always ensure claude is available in PATH
        sudo ln -sf ~/.cache/claude-code/claude /usr/local/bin/claude

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

    - name: Run CI pipeline
      run: |
        # Clean up potential temp files and logs from previous runs
        rm -rf /tmp/agentapi-script-* logs/ || true
        mkdir -p logs
        make test
