name: E2E Tests

on:
  push:
    branches: [ main, feature/e2e-claude-code-integration ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true

    - name: Verify Go installation
      run: |
        go version
        which go

    - name: Install Claude Code CLI
      run: |
        # Install Claude Code CLI using npm
        echo "Installing Claude Code CLI via npm..."
        npm install -g @anthropic-ai/claude-code
        
        # Verify installation
        claude --version

    - name: Install AgentAPI
      run: |
        # Download and install agentapi binary
        echo "Downloading AgentAPI binary..."
        curl -L https://github.com/coder/agentapi/releases/latest/download/agentapi-linux-amd64 -o agentapi
        chmod +x agentapi
        sudo mv agentapi /usr/local/bin/
        
        # Verify installation
        agentapi --version || echo "AgentAPI version check failed, but binary installed"

    - name: Build binary
      run: |
        make build

    - name: Verify binary exists
      run: |
        ls -la bin/
        ls -la ./bin/agentapi-proxy || echo "Binary not found"
        file ./bin/agentapi-proxy || echo "File command failed"

    - name: Run E2E tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        CLAUDE_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GO_TEST_TIMEOUT: 120s
      run: |
        make e2e

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results.xml
          coverage.out
        retention-days: 30

  notify-status:
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.e2e-tests.result == 'success'
      run: |
        echo "✅ E2E tests passed successfully!"
        
    - name: Notify failure
      if: needs.e2e-tests.result == 'failure'
      run: |
        echo "❌ E2E tests failed!"
        exit 1